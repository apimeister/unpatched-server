openapi: 3.0.3
info:
  title: Unpatched Server API
  version: 1.0.0
  description: |-
    Unpatched Server API
    * All timestamps are in UTC
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Alexander Kunde
    email: alexander@apimeister.com
externalDocs:
  description: Find out more about Unpatched Server
  url: https://github.com/apimeister/unpatched-server
servers:
- url: /api/v1
tags:
  - name: executions
    description: Everything about executions
    externalDocs:
      description: Find out more
      url: https://github.com/apimeister/unpatched-server/blob/main/src/execution.rs
  - name: hosts
    description: Everything about hosts
    externalDocs:
      description: Find out more
      url: https://github.com/apimeister/unpatched-server/blob/main/src/host.rs
  - name: schedules
    description: Everything about schedules
    externalDocs:
      description: Find out more
      url: https://github.com/apimeister/unpatched-server/blob/main/src/schedule.rs
  - name: scripts
    description: Everything about scripts
    externalDocs:
      description: Find out more
      url: https://github.com/apimeister/unpatched-server/blob/main/src/script.rs
paths:
  /executions:
    get:
      tags:
        - executions
      summary:  Retrieve list of executions
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Execution'
    delete:
      tags:
        - executions
      summary: Delete all executions
      responses:
        '200':
          description: Executions deleted successfully
        '403':
          description: Forbidden request
  /executions/{id}:
    get:
      tags:
        - executions
      summary: get execution information
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: execution id
      responses:
        200:
          description: execution information
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Execution'
    delete:
      tags:
        - executions
      summary: delete execution
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: execution id
      responses:
        200:
          description: execution deleted
        403:
          description: no execution found with this id or cannot be deleted
  /hosts:
    get:
      tags:
        - hosts
      summary: Get all hosts
      responses:
        '200':
          description: Successful response containing a list of hosts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Host'
    delete:
      tags:
        - hosts
      summary: Delete all hosts
      responses:
        '200':
          description: All hosts deleted successfully
        '403':
          description: Forbidden (delete failed)
    post:
      tags:
        - hosts
      summary: Create a new host
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
      responses:
        '201':
          description: Host created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: Bad request
  /hosts/{id}:
    get:
      tags:
        - hosts
      summary: Get a single host by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to retrieve
      responses:
        '200':
          description: Successful response containing the host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
    patch:
      tags:
        - hosts
      summary: Update a single host by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Host updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
    delete:
      tags:
        - hosts
      summary: Delete a single host by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to delete
      responses:
        '200':
          description: Host deleted successfully
        '403':
          description: Forbidden (delete failed)
  /hosts/{id}/approve:
    post:
      tags:
        - hosts
      summary: Approve host with outdated or unknown apikey
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to approve
      responses:
        '200':
          description: Approved host
        '400':
          description: Bad request
  /hosts/{id}/lock:
    post:
      tags:
        - hosts
      summary: Lock host
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to lock
      responses:
        '200':
          description: Locked host
        '400':
          description: Bad request
  /hosts/{id}/schedules:
    get:
      tags:
        - hosts
        - schedules
      summary: Get all schedules for this host
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to get schedules for
        - in: query
          name: filter
          description: filter
          schema:
            type: string
            enum: [active, inactive, all]
      responses:
        '200':
          description: Successful response containing a list of schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
    post:
      tags:
        - hosts
        - schedules
      summary: Create a new schedule for this host
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to create schedules for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/Schedule"
              - type: object
                properties:
                  target:
                    properties:
                      attributes:
                        readOnly: true
      responses:
        '201':
          description: Schedule created successfully
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
  /hosts/{id}/executions:
    get:
      tags:
        - hosts
        - executions
      summary: Get all executions for this host
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the host to get executions for
        - in: query
          name: filter
          description: filter
          schema:
            type: string
            enum: [active, inactive, all]
      responses:
        '200':
          description: Successful response containing a list of executions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
  /schedules:
    get:
      tags:
        - schedules
      summary: Get all schedules
      responses:
        '200':
          description: Successful response containing a list of schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
    delete:
      tags:
        - schedules
      summary: Delete all schedules
      responses:
        '200':
          description: All schedules deleted successfully
        '403':
          description: Forbidden (delete failed)
    post:
      tags:
        - schedules
      summary: Create a new schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '201':
          description: Schedule created successfully
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
  /schedules/{id}:
    get:
      tags:
        - schedules
      summary: Get a single schedule by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the schedule to retrieve
      responses:
        '200':
          description: Successful response containing the schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
    delete:
      tags:
        - schedules
      summary: Delete a single schedule by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the schedule to delete
      responses:
        '200':
          description: Schedule deleted successfully
        '403':
          description: Forbidden (delete failed)
  /scripts:
    get:
      tags:
        - scripts
      summary: Retrieve list of scripts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Script'
    delete:
      tags:
        - scripts
      summary: Delete all scripts
      responses:
        '200':
          description: Scripts deleted successfully
        '403':
          description: Forbidden request
    post:
      tags:
        - scripts
      summary: Create a new script
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
      responses:
        '201':
          description: Script created successfully
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
  /scripts/{id}:
    get:
      tags:
        - scripts
      summary: Get a single script by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the script to retrieve
      responses:
        '200':
          description: Script retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
    delete:
      tags:
        - scripts
      summary: Delete a single script by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the script to delete
      responses:
        '200':
          description: Script deleted successfully
        '403':
          description: Forbidden (delete failed)   
components:
  schemas:
    Execution:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        request:
          type: string
          format: date-time
        response:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        host_id:
          type: string
          format: uuid
        sched_id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
          readOnly: true
        output:
          type: string
          nullable: true
          readOnly: true
          example: hello world
    Host:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        alias:
          type: string
        attributes:
          type: array
          items:
            type: string
        ip:
          type: string
          pattern: '^[1-9]{1,3}\.[1-9]\d{0,2}\.[1-9]\d{0,2}\.[1-9]\d{0,2}:[1-9]{2,5}$'
        last_pong:
          type: string
          format: date-time
          readOnly: true
    Schedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        script_id:
          type: string
          format: uuid
        target:
          type: object
          properties:
            attributes:
              type: array
              items:
                type: string
            host_id:
              type: string
              format: uuid
          oneOf:
            - required: [attributes]
            - required: [host_id]
        timer:
          type: object
          properties:
            cron:
              type: string
              example: "* * * * *"
            timestamp:
              type: string
              format: date-time
          oneOf:
            - required: [cron]
            - required: [timestamp]
        active:
          type: boolean
    Script:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        version:
          type: string
        output_regex:
          type: string
          format: regex
        labels:
          type: array
          items:
            type: string
        timeout:
          type: string
          example: 5s
        script_content:
          type: string
          example: echo -c "Hello World"